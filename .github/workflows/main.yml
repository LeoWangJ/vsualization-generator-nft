name: Build and Deploy
on:
  push:
    tags:
      - 'v*'
jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "v18.14.1"
          registry-url: 'https://registry.npmjs.org/'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.11.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Building
        run: pnpm run build

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-name default --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACCESS_PRIVATE_KEY }}

      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@v4.1.8
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_TOKEN }}
          REMOTE_USER: ${{ secrets.SERVER_USER }} 
          SOURCE: "dist nginx/default.conf Dockerfile"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          TARGET: "/var/www"
          EXCLUDE: "/node_modules/"
          ARGS: "--delete"
          SCRIPT_BEFORE: ls
          SCRIPT_AFTER: |
            cd var/www
            docker stop my-container || true
            docker rm my-container || true
            docker pull generator-nft:latest
            docker run -d --name my-container -p 80:80 generator-nft:latest

    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-name default --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.ACCESS_PRIVATE_KEY }}
      if: always()